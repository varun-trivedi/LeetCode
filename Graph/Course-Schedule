//https://leetcode.com/problems/course-schedule/
class Solution {
public:
    bool checkdfs(int i,vector <int> &vis,vector <int> &dfsvis,vector <int> adj[])
    {
        vis[i] = 1;
        dfsvis[i] = 1;
        for(auto it : adj[i])
        {
            if(vis[it] == 0)
            {
                if(checkdfs(it,vis,dfsvis,adj))
                    return true;
            }
            else
            {
                if(dfsvis[it] == 1)
                    return true;
            }
        }
        dfsvis[i] = 0;
        return false;
    }
    bool canFinish(int numCourses, vector<vector<int>>& pre) {
        vector <int> vis(numCourses,0);
        vector <int> dfsvis(numCourses,0);
        vector <int> adj[numCourses];
        for(int i=0;i<pre.size();i++)
        {
            adj[pre[i][1]].push_back(pre[i][0]);
        }
        for(int i=0;i<numCourses;i++)
        {
            if(vis[i] == 0)
            {
                if(checkdfs(i,vis,dfsvis,adj))
                    return false;
            }
        }
        return true;
        
    }
};
