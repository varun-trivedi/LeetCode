//https://leetcode.com/problems/is-graph-bipartite/
class Solution {
public:
    vector <int> visited,colour;
    bool dfs(vector<vector<int>> &graph,int c,int i)
    {
        visited[i] = 1;
        colour[i] = c;
        for(int it : graph[i])
        {
            if(visited[it] == 0 && dfs(graph,1-c,it)==false)
                return false;
            else
            {
                if(colour[it] == colour[i])
                    return false;
            }
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int v = graph.size();
        visited.resize(v);
        colour.resize(v);
        for(int i=0;i<v;i++)
        {
            if(visited[i] == 0)
            {
                if(!(dfs(graph,0,i)))
                    return false;
            }
        }
        return true;
        
    }
};
