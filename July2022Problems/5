class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        if(nums.size() == 0)
            return 0;
        int mcount = 1;
        unordered_map <int,int> mp;
        unordered_map <int,int> prevcount;
        unordered_map <int,int> visited;
        for(int i=0;i<nums.size();i++)
        {
            mp[nums[i]]++;
        }
        for(int i=0;i<nums.size();i++)
        {
            if(visited[nums[i]] == 1)
                continue;
            visited[nums[i]] = 1;
            int x = nums[i];
            int count = 1;
            while(mp[x-1] > 0)
            {
                visited[x-1] = 1;   
                if(prevcount[x-1] > 0 )
                {
                    count = count + prevcount[x-1];
                    break;
                }
                count++;
                x = x-1;
            }
            prevcount[nums[i]] = count;
            mcount = max(mcount,count);
        }
        return mcount;
        
    }
};
